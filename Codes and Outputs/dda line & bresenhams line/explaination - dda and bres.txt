Sure, let's break down the provided code:

```cpp
#include<windows.h>
#include<GL/glut.h>
#include<GL/glu.h>
#include<iostream>
#include<math.h>
#define h 700
#define w 700
using namespace std;
```

1. These lines include necessary header files for Windows API, OpenGL Utility Toolkit (GLUT), OpenGL Utility Library (GLU), input/output streams, and math functions. `h` and `w` are defined as the height and width of the window, respectively.

```cpp
GLint xi, xii, yi, yii;
```

2. Global variables `xi`, `xii`, `yi`, and `yii` are declared to store the coordinates of the starting and ending points of the line.

```cpp
void setpixel(GLint x, GLint y)
{
 glColor3f(0.0, 0.0, 1.0);
 glBegin(GL_POINTS);
 glVertex2f(x, y);
 glEnd();
 glFlush();
}
```

3. The `setpixel` function sets the pixel at the given coordinates `(x, y)`.

```cpp
void initialize()
{
 glClearColor(0.6, 0.6, 0.6, 0.0);
 glClear(GL_COLOR_BUFFER_BIT);
 glMatrixMode(GL_PROJECTION);
 glLoadIdentity();
 gluOrtho2D(-w / 2, w / 2, -h / 2, h / 2);
}
```

4. The `initialize` function initializes the OpenGL environment and sets the orthographic projection.

```cpp
void choice()
{
    int i;
    glPointSize(2.0);
    for (i = -w; i < w; i++)
    {
        setpixel(0, i);
        setpixel(i, 0);
    }
}
```

5. The `choice` function draws a grid in the window.

```cpp
class line
{
public:
    void dda(int item)
    {
        // Implementation of DDA line drawing algorithm
    }

    void bresenham(int item)
    {
        // Implementation of Bresenham line drawing algorithm
    }
};
```

6. A class named `line` is defined, which contains methods for implementing the DDA and Bresenham line drawing algorithms.

```cpp
void keyboard(unsigned char key, int x, int y)
{
    if (key == 27)
        exit(0);
    else
        cout << "You entered the " << key;
}
```

7. The `keyboard` function handles keyboard input.

```cpp
void menu(int item)
{
    // Handling menu selections
}
```

8. The `menu` function handles menu selections.

```cpp
void mouse(int button, int state, int x, int y)
{
    // Handling mouse clicks
}
```

9. The `mouse` function handles mouse clicks.

```cpp
int main(int argc, char **argv)
{
    // OpenGL initialization and main loop
}
```

10. The `main` function initializes GLUT, creates the window, sets up callbacks, and enters the GLUT event-processing loop.

The code mainly implements line drawing using DDA and Bresenham algorithms, provides a menu interface to choose different line types, and handles mouse and keyboard events. The DDA and Bresenham algorithms are used to draw simple lines, dotted lines, dashed lines, and solid lines.